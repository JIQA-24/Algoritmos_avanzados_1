#include <iostream>
#include <fstream>
#include <vector>

using namespace std;

int Contador = 0;
int tota = 0;

vector<int> PreProcesamiento(string Mcode){
    int l = Mcode.length();

    vector<int> kmp(1,0);
    int pPatron = 0;

    for (int iter = 1; iter < l; iter++){
        if(Mcode[iter] == Mcode[pPatron]){
            pPatron++;
            kmp.push_back(pPatron);
        }else{
            pPatron = 0;
            kmp.push_back(pPatron);
        }
    }

    return kmp;
}
//o(n)
//encontrar el Virus en el string
void KMP(string Transmision, string Mcode, vector<int> kmp, int cont){

    int tamanoPatron = Mcode.length();
    int posPatron = 0;

    for (int i = 0; i < Transmision.length(); i++){
    	
    	cont++;

        if (Mcode[posPatron] == Transmision[i]){
            posPatron++;
            
            if (posPatron == tamanoPatron){
                int nuevaPosicion = i - (tamanoPatron - 1);
                nuevaPosicion = nuevaPosicion + 1; //Por que es Base 1;
                cout << tota+nuevaPosicion << " ";
                posPatron = kmp[posPatron - 1];
                Contador = 1;
            }
        }else{
            if (posPatron != 0){
                posPatron = kmp[posPatron - 1];
                i--;
            }
        }
    }
    tota=tota+cont;
}

int main(){
    int Actividades, Secuencia, N;
    string virus, codigo;

    Secuencia = 0;
    Actividades = 0;


    ifstream archivo1("transmission1.txt");
    string Transmission1;
    ifstream archivo12("transmission1.txt");
    string Transmission12;
    ifstream archivo13("transmission1.txt");
    string Transmission13;


    ifstream archivo2("transmission2.txt");
    string Transmission2;
    ifstream archivo22("transmission2.txt");
    string Transmission22;
    ifstream archivo23("transmission2.txt");
    string Transmission23;

    ifstream archivo3("mcode1.txt");
    string Mcode1;
    archivo3 >> Mcode1;

    ifstream archivo4("mcode2.txt");
    string Mcode2;
    archivo4 >> Mcode2;

    ifstream archivo5("mcode3.txt");
    string Mcode3;
    archivo5 >> Mcode3;

//******************* Transmission1 ******************* 

    Contador = 0;
    tota = 0;
    while(archivo1 >> Transmission1) {  
        vector<int> preKMP = PreProcesamiento(Mcode1);
        int conta=0;
        KMP(Transmission1,Mcode1,preKMP,conta);
         
    }

    if (Contador != 0){
        cout << "true" << " " << "\n";
    }
    else{
        cout << "false" << "\n";
    } 

    Contador = 0;
    tota = 0;
    archivo12.seekg(0);
    while(archivo12 >> Transmission1) {
        vector<int> preKMP = PreProcesamiento(Mcode2);
        int conta=0;
        KMP(Transmission1,Mcode2,preKMP,conta);
    }

    if (Contador != 0){
        cout << "true" << " " << "\n";
    }
    else{
        cout << "false" << "\n";
    } 

    Contador = 0;
    tota = 0;
    archivo13.seekg(0);
    while(archivo13 >> Transmission1) {        
        vector<int> preKMP = PreProcesamiento(Mcode3);
        int conta=0;
        KMP(Transmission1,Mcode3,preKMP,conta); 
    }

    if (Contador != 0){
        cout << "true" << " " << "\n";
    }
    else{
        cout << "false" << "\n";
    } 
//******************* Transmission2 *******************
    Contador = 0;
    tota = 0;
    while(archivo2 >> Transmission1) {      
        vector<int> preKMP = PreProcesamiento(Mcode1);
        int conta=0;
        KMP(Transmission1,Mcode1,preKMP,conta);
    }

    if (Contador != 0){
        cout << "true" << " " << "\n";
    }
    else{
        cout << "false" << "\n";
    }

    Contador = 0;
    tota = 0;
    archivo22.seekg(0);
    while(archivo22 >> Transmission1) {        
        vector<int> preKMP = PreProcesamiento(Mcode2);
        int conta=0;
        KMP(Transmission1,Mcode2,preKMP,conta); 
    }

    if (Contador != 0){
        cout << "true" << " " << "\n";
    }
    else{
        cout << "false" << "\n";
    }

    Contador = 0;
    tota = 0;
    archivo23.seekg(0);
    while(archivo23 >> Transmission1) {
        vector<int> preKMP = PreProcesamiento(Mcode3);
        int conta=0;
        KMP(Transmission1,Mcode3,preKMP,conta); 
    }

    if (Contador != 0){
        cout << "true" << " " << "\n";
    }
    else{
        cout << "false" << "\n";
    } 

}


